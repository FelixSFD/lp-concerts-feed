# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy to AWS

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to deploy to'
        type: environment
        required: true

jobs:
  backend:
    environment: 
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install Lambda tools
      run: dotnet tool install -g Amazon.Lambda.Tools
    - name: Restore dependencies
      run: dotnet restore

    - name: Build Lambda.AddConcert
      working-directory: Lambda.AddConcert/src/Lambda.AddConcert
      run: dotnet lambda package -farch arm64
    - name: Build Lambda.ListConcerts
      working-directory: Lambda.ListConcerts/src/Lambda.ListConcerts
      run: dotnet lambda package -farch arm64
    - name: Build Lambda.DeleteConcert
      working-directory: Lambda.DeleteConcert/src/Lambda.DeleteConcert
      run: dotnet lambda package -farch arm64
    - name: Build Lambda.CalendarFeed
      working-directory: Lambda.CalendarFeed/src/Lambda.CalendarFeed
      run: dotnet lambda package -farch arm64

    # AWS DEPLOY
    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - run: sam build -t 05-backend-deployment.yaml
      working-directory: aws
    - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ${{ vars.BASE_NAME }}-backend --resolve-s3 --s3-prefix ${{ vars.BASE_NAME }}-${{ github.ref_name }} --region eu-central-1 --capabilities CAPABILITY_IAM --parameter-overrides CallbackUrl=https://${{ vars.ROOT_DOMAIN }} UserPoolId=${{ vars.BASE_NAME }}-userpool RootDomain=${{ vars.ROOT_DOMAIN }} HostedZoneId=${{ vars.HOSTED_ZONE_ID }} CertificateArn=${{ vars.SSL_CERT_ARN }}
      working-directory: aws

  frontend:
    needs: [backend]
    environment: 
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23.6.x'

    - name: Install dependencies
      working-directory: frontend/lp-calendar-web
      run: npm ci # Use npm ci for faster installs and CI consistency
    
    - name: Replace ROOT_DOMAIN
      uses: richardrigutins/replace-in-files@v2
      with:
        files: 'frontend/lp-calendar-web/src/environments/environment.github.ts'
        search-text: 'ROOT_DOMAIN'
        replacement-text: ${{ vars.ROOT_DOMAIN }}
    - name: Replace COGNITO_URL
      uses: richardrigutins/replace-in-files@v2
      with:
        files: 'frontend/lp-calendar-web/src/environments/environment.github.ts'
        search-text: 'COGNITO_URL'
        replacement-text: ${{ vars.COGNITO_URL }}
    - name: Replace COGNITO_CLIENT_ID
      uses: richardrigutins/replace-in-files@v2
      with:
        files: 'frontend/lp-calendar-web/src/environments/environment.github.ts'
        search-text: 'COGNITO_CLIENT_ID'
        replacement-text: ${{ vars.COGNITO_CLIENT_ID }}
    
    - name: Build Angular project
      working-directory: frontend/lp-calendar-web
      run: npm run build -- --configuration production

    - name: Deploy
      if: success()
      working-directory: frontend/lp-calendar-web
      run: aws s3 sync ./dist/lp-calendar-web/browser s3://${{ vars.BASE_NAME }}-web-frontend-bucket
