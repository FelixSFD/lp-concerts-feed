AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Application to manage the CloudFront deployment for the LP Calendar project



Parameters:
  BaseProductName:
    Description: Name of the product. Is used as prefix in the exports
    Type: String
  RootDomain:
    Type: String
  CertificateArn:
    Type: String
  HostedZoneId:
    Type: String
    Default: ""



Resources:
  # CORS Cloudfront
  CORSOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Name: !Sub ${AWS::StackName}_CORSOriginRequestPolicy
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - Origin
            - Access-Control-Request-Headers
            - Access-Control-Request-Method
        QueryStringsConfig:
          QueryStringBehavior: all
        CookiesConfig:
          CookieBehavior: none

  CORSResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub ${AWS::StackName}_CORSResponseHeadersPolicy
        Comment: "Add CORS headers to the response"
        CorsConfig:
          AccessControlAllowCredentials: false
          AccessControlAllowHeaders:
            Items:
              - '*'
              - Authorization
          AccessControlAllowMethods:
            Items:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
          AccessControlAllowOrigins:
            Items:
              - '*'
          AccessControlExposeHeaders:
            Items:
              - '*'
          OriginOverride: true
        SecurityHeadersConfig:
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: SAMEORIGIN
            Override: true
          ReferrerPolicy:
            ReferrerPolicy: no-referrer
            Override: true
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 31536000
            IncludeSubdomains: true
            Override: true

  # Cloudfront caching
  DefaultCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub ${AWS::StackName}_DefaultCachePolicy
        DefaultTTL: 120
        MaxTTL: 86400
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: all
          EnableAcceptEncodingBrotli: false
          EnableAcceptEncodingGzip: false
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Authorization
              - X-LP-Request-Id
          QueryStringsConfig:
            QueryStringBehavior: all
  
  ExtraLongCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub ${AWS::StackName}_ExtraLongCachePolicy
        DefaultTTL: 3600
        MaxTTL: 86400
        MinTTL: 300
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: all
          EnableAcceptEncodingBrotli: false
          EnableAcceptEncodingGzip: false
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Authorization
              - X-LP-Request-Id
          QueryStringsConfig:
            QueryStringBehavior: all
  
  # CloudFront distribution
  ApiCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - DefaultCachePolicy
      - CORSOriginRequestPolicy
      - CORSResponseHeadersPolicy
    Properties:
      Tags:
        - Key: "ProductName"
          Value: "lpcalendar"
        - Key: "Stage"
          Value: !Ref BaseProductName
        - Key: "Category"
          Value: "api"
      DistributionConfig:
        Origins:
          - Id: ApiGatewayOrigin
            DomainName: {'Fn::ImportValue': !Sub '${BaseProductName}-api-gateway-domain' }
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        Aliases: # info about CNAMEs (alternate domain names), if any, for this distribution
          - !Sub 'api.${RootDomain}'
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: ApiGatewayOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - PATCH
            - DELETE
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachePolicyId: !Ref DefaultCachePolicy
          OriginRequestPolicyId: !Ref CORSOriginRequestPolicy
          ResponseHeadersPolicyId: !Ref CORSResponseHeadersPolicy
        Enabled: true
        Comment: !Sub "${AWS::StackName} API"
        PriceClass: PriceClass_100
  
  FrontendCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - DefaultCachePolicy
      - CORSOriginRequestPolicy
      - CORSResponseHeadersPolicy
    Properties:
      Tags:
        - Key: "ProductName"
          Value: "lpcalendar"
        - Key: "Stage"
          Value: !Ref BaseProductName
        - Key: "Category"
          Value: "frontend"
      DistributionConfig:
        Origins:
          - Id: FrontendBucketOrigin
            DomainName: { 'Fn::ImportValue': !Sub '${BaseProductName}-frontend-s3-regional-domain' }
            S3OriginConfig: { }
        Aliases: # info about CNAMEs (alternate domain names), if any, for this distribution
          - !Sub '${RootDomain}'
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: FrontendBucketOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - PATCH
            - DELETE
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachePolicyId: !Ref DefaultCachePolicy
          OriginRequestPolicyId: !Ref CORSOriginRequestPolicy
          ResponseHeadersPolicyId: !Ref CORSResponseHeadersPolicy
        Enabled: true
        Comment: !Sub "${AWS::StackName} Frontend"
        PriceClass: PriceClass_100
  
  ConcertImagesCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - ExtraLongCachePolicy
      - CORSOriginRequestPolicy
      - CORSResponseHeadersPolicy
    Properties:
      Tags:
        - Key: "ProductName"
          Value: "lpcalendar"
        - Key: "Stage"
          Value: !Ref BaseProductName
        - Key: "Category"
          Value: "frontend"
      DistributionConfig:
        Origins:
          - Id: ImageBucketOrigin
            DomainName: { 'Fn::ImportValue': !Sub '${BaseProductName}-concert-image-s3-regional-domain' }
            S3OriginConfig: { }
        Aliases: # info about CNAMEs (alternate domain names), if any, for this distribution
          - !Sub 'img.${RootDomain}'
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: ImageBucketOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachePolicyId: !Ref ExtraLongCachePolicy
          OriginRequestPolicyId: !Ref CORSOriginRequestPolicy
          ResponseHeadersPolicyId: !Ref CORSResponseHeadersPolicy
        Enabled: true
        Comment: !Sub "${AWS::StackName} Image host"
        PriceClass: PriceClass_100


Outputs:
  CloudFrontExport:
    Description: 'ID of CloudFront distribution for the API'
    Value: !Ref ApiCloudFrontDistribution
    Export:
      Name: !Sub '${BaseProductName}-cloudfront'
  CloudFrontDomainExport:
    Description: 'ID of CloudFront distribution for the API'
    Value: !GetAtt ApiCloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${BaseProductName}-cloudfront-domain'
  FrontendCloudFrontExport:
    Description: 'ID of CloudFront distribution for the frontend'
    Value: !Ref FrontendCloudFrontDistribution
    Export:
      Name: !Sub '${BaseProductName}-frontend-cloudfront'
  FrontendCloudFrontDomainExport:
    Description: 'ID of CloudFront distribution for the frontend'
    Value: !GetAtt FrontendCloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${BaseProductName}-frontend-cloudfront-domain'
  ConcertImagesCloudFrontDomainExport:
    Description: 'Domain of CloudFront distribution for the concert images'
    Value: !GetAtt ConcertImagesCloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${BaseProductName}-concert-img-cloudfront-domain'